<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">30050000</stringProp>
        <stringProp name="CounterConfig.end"></stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">Counter</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Escenario-1" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">50</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STEP-1" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox-andreani.hopenvios.com.ar</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">1323</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">HnnKm3pNFsWw09uBPMR90eVgVtJs0qY3peatPSWs</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="email" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">email</stringProp>
                <stringProp name="Argument.value">integracionhop@andreani.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">AndreaniIntegraciones.Test123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer {JWT}</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">a9d7872d-4aeb-42aa-baf8-c5805d71beac</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">access_token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STEP-2">
          <stringProp name="HTTPSampler.domain">sandbox-andreani.hopenvios.com.ar</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/shipments</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;shipping_type&quot;: &quot;E&quot;,&#xd;
    &quot;reference_id&quot;: &quot;${Counter}&quot;,&#xd;
    &quot;reference_1&quot;: &quot;&quot;,&#xd;
    &quot;reference_2&quot;: &quot;&quot;,&#xd;
    &quot;reference_3&quot;: &quot;&quot;,&#xd;
    &quot;label_type&quot;: &quot;JPEG&quot;,&#xd;
    &quot;seller_code&quot;: &quot;ANDREANI&quot;,&#xd;
    &quot;storage_code&quot;: &quot;DEPOSITO&quot;,&#xd;
    &quot;days_offset&quot;: &quot;2&quot;,&#xd;
    &quot;agency_code&quot;: 1476,&#xd;
    &quot;client&quot;: {&#xd;
        &quot;name&quot;: &quot;Luis&quot;,&#xd;
        &quot;email&quot;: &quot;luissndval@gmail.com&quot;,&#xd;
        &quot;id_type&quot;: &quot;dni&quot;,&#xd;
        &quot;id_number&quot;: &quot;95760408&quot;,&#xd;
        &quot;telephone&quot;: &quot;115016362&quot;&#xd;
    },&#xd;
    &quot;package&quot;: {&#xd;
        &quot;size_category&quot;: &quot;1&quot;,&#xd;
        &quot;width&quot;: &quot;&quot;,&#xd;
        &quot;length&quot;: &quot;&quot;,&#xd;
        &quot;height&quot;: &quot;&quot;,&#xd;
        &quot;value&quot;: &quot;1000&quot;,&#xd;
        &quot;weight&quot;: &quot;1&quot;&#xd;
    },&#xd;
    &quot;sender&quot;: {&#xd;
        &quot;name&quot;: &quot;Luis&quot;,&#xd;
        &quot;id_number&quot;: &quot;95760408&quot;,&#xd;
        &quot;phone&quot;: &quot;Luis&quot;,&#xd;
        &quot;mail&quot;: &quot;luissndval@gmail.com&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhdWQiOiIxMzIzIiwianRpIjoiZDhkMzAzZjk4ZmE1ZDE0Njc1YjQxYzljNjRmZWMwYWY3ZjVmYzRlNDUwMDljYTUwN2M2OTQ4NWZkYmYwZDg5YTc0MTFiNjRiMzBlODU2MGUiLCJpYXQiOjE3MDU2Nzk1MTMuNTQ4NTkyLCJuYmYiOjE3MDU2Nzk1MTMuNTQ4NjAyLCJleHAiOjE3MDU3MDExMTMuNTM0OTQ5LCJzdWIiOiIzNzEiLCJzY29wZXMiOlsiZWNvbW1lcmNlIl19.O1GD0mhL5IebuWxfhFbmzUByd9KUD6sdLRrbDDr6oXzCfSF2mIUyyOqM44pF6DIjV6dOsb7Qmg-dk58uk6uagMF5G3_8DKsANQMrUIDHqyb1RioCe1QDDu3kUxrN_70zV2B3CgZgdaeeCkrBJLA_6rHvVsd9xmOh9Itdcriy5MDbMawm65y7JiJ9LEZ5TlwxHCe-RIrRKy_-6lWkTsDidn8s0HFyTHOxz8Q9QHrmVqa4iYVYXF9uYfkjOJ9oxYcGNRQrBw9Cl2d2V1SIDJBKENT3yB1KwFdIsKEKR49Uhwexgw2MbYkcyMptaKz_xn2eiyosBMVdKh4GCM1rEhwK7KsKwXHFB4ljkERgyn4I2PG9ckTLnn67LhiL646-ghhFCHxPu8d1eAEWmRN0BwqPoPB6CaIcYTneAkxy3H4kCMO9Mvb9U5BcUYcf1nG-eb9umDPlKniPgb94UgrjNfw9Fob6dwmvuWiPgjQHmPtg9BNyPxA3HVP4t3anQEF32Pgvw-3202XvmlVItB9fyPIzPhSCw__U1E5GUA-_s1TAZMj0IsObKu5Bilr1R-jChsVgNuP1W8XuhdfxSWcJuGxZuuPhVqXW9u_nVrkPCVV7mihbYQnq0gPKlk2TgM9wT_P2dDOzwIczaK8S7sgrfE_aKqZat68rHkXHdaqi_sF60ek</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">6ad5eabc-c948-4add-90a4-6b1c5c9ffcda</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STEP-3" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox-andreani.hopenvios.com.ar</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/shipments/${Counter}/receive-notification</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;date&quot;: &quot;2023-10-26 13:38:46&quot;, &#xd;
    &quot;event&quot;: &quot;ICD&quot;,&#xd;
    &quot;ciclo_distribucion&quot;: &quot;2&quot;, &#xd;
    &quot;sucursal_distribucion&quot;: &quot;&quot;,&#xd;
    &quot;motivo&quot;: &quot;&quot;,&#xd;
    &quot;sub_motivo&quot;: &quot;tex&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">BearereyJhdWQiOiIxMzIzIiwianRpIjoiZDhkMzAzZjk4ZmE1ZDE0Njc1YjQxYzljNjRmZWMwYWY3ZjVmYzRlNDUwMDljYTUwN2M2OTQ4NWZkYmYwZDg5YTc0MTFiNjRiMzBlODU2MGUiLCJpYXQiOjE3MDU2Nzk1MTMuNTQ4NTkyLCJuYmYiOjE3MDU2Nzk1MTMuNTQ4NjAyLCJleHAiOjE3MDU3MDExMTMuNTM0OTQ5LCJzdWIiOiIzNzEiLCJzY29wZXMiOlsiZWNvbW1lcmNlIl19.O1GD0mhL5IebuWxfhFbmzUByd9KUD6sdLRrbDDr6oXzCfSF2mIUyyOqM44pF6DIjV6dOsb7Qmg-dk58uk6uagMF5G3_8DKsANQMrUIDHqyb1RioCe1QDDu3kUxrN_70zV2B3CgZgdaeeCkrBJLA_6rHvVsd9xmOh9Itdcriy5MDbMawm65y7JiJ9LEZ5TlwxHCe-RIrRKy_-6lWkTsDidn8s0HFyTHOxz8Q9QHrmVqa4iYVYXF9uYfkjOJ9oxYcGNRQrBw9Cl2d2V1SIDJBKENT3yB1KwFdIsKEKR49Uhwexgw2MbYkcyMptaKz_xn2eiyosBMVdKh4GCM1rEhwK7KsKwXHFB4ljkERgyn4I2PG9ckTLnn67LhiL646-ghhFCHxPu8d1eAEWmRN0BwqPoPB6CaIcYTneAkxy3H4kCMO9Mvb9U5BcUYcf1nG-eb9umDPlKniPgb94UgrjNfw9Fob6dwmvuWiPgjQHmPtg9BNyPxA3HVP4t3anQEF32Pgvw-3202XvmlVItB9fyPIzPhSCw__U1E5GUA-_s1TAZMj0IsObKu5Bilr1R-jChsVgNuP1W8XuhdfxSWcJuGxZuuPhVqXW9u_nVrkPCVV7mihbYQnq0gPKlk2TgM9wT_P2dDOzwIczaK8S7sgrfE_aKqZat68rHkXHdaqi_sF60ek</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">6ad5eabc-c948-4add-90a4-6b1c5c9ffcda</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STEP-4" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox-andreani.hopenvios.com.ar</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/shipments/send-notification</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;topic&quot;: &quot;tracking&quot;,&#xd;
    &quot;event&quot;: &quot;new_status&quot;,&#xd;
    &quot;created_at&quot;: &quot;2023-10-28 14:00:04&quot;,&#xd;
    &quot;resource&quot;: &quot;/tracking/${Counter}&quot;,&#xd;
    &quot;resource_id&quot;: &quot;${Counter}&quot;,&#xd;
    &quot;date&quot;: &quot;2022-01-28 14:00:04&quot;,&#xd;
    &quot;state&quot;: &quot;ICD&quot;, &#xd;
    &quot;source&quot;: &quot;HOP&quot;&#xd;
    &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMzIzIiwianRpIjoiZjhiNmMwZWVlOThjYzY1YzIyNGY1NjkyNTVkMzNlY2QyNTA3M2I2MTZlNDM0YzJhODI1MWE3MmY3YmY1ZmIzYjE0MDUzMDA0MWYzODk4NWEiLCJpYXQiOjE3MDU1OTg3NTUuMjM3MzU3LCJuYmYiOjE3MDU1OTg3NTUuMjM3MzYzLCJleHAiOjE3MDU2MjAzNTUuMjIyMTAzLCJzdWIiOiIzNzEiLCJzY29wZXMiOlsiZWNvbW1lcmNlIl19.r4QyDOukYikGoXRbdjHa4gRoVm2_OhLov1Adxx-59UuXErS6mirIjYRLnLMEjPpLI6aFdCE9Lx8jVFaO0GFRgCvZe4N2eyDsWsV3vM1492Qt4VvIcrf3h5UBIZdqxoVeeepYVD_-lHJgDWagkLIRW7Jh7ZRpy-MSYtU_DodPNfZl-orAwZm92MdpuPtGPhp_hJSn6IQ2O64enzPT4hs3IcuxlVOLm1JYkgVisUrd8i0FDhjv_MsAa35g4Uzmo6fuXAdgvNGea3aYNKtTA9MzvO7LV-GB6PrWNFVaGPMj5hmykq__Ge0wKjQ1qIXRM2tJ71u__ujo3J3bU0EbO8bSLQ2_lDqPmrgKOMok-sspPl9MPKhUPN8yg_yO4gNQr2j4PQYswdLXtn3Ho3Oa22YPTrn_JJM61Kl3wgUp0QKLnG4LeDwySWlgn6xu9pF8h8XsBZs2ZkNggTsprnTGkbv2rKr5aFFzn63oNN0N1DZhC-dGf1UD0ijMdTz_woXKRPQfZDNJBgrO2czKo7-J2FnFTsakrqcTmHMQqGukbVlZ4PqsoTdgpLRmPojJI2WIuc55s9w-devZYDlZ7PJMQIklQJIzEOJk8mC1JWff4EZyuMQiwuBYfNS1bt1P5g45vUpmWLH4Oz5qj6WlRPzq7_8WREcGvMOg20W3nP_cfRHLntk</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">6ad5eabc-c948-4add-90a4-6b1c5c9ffcda</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
